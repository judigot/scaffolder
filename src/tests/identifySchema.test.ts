import { describe, it, expect } from 'vitest';
import identifySchema from '@/utils/identifySchema';
import { POSSchema } from '@/json-schemas/POSSchema';
import { usersPostOneToOneSchema } from '@/json-schemas/usersPostOneToOneSchema';
import { usersPostsOneToManySchema } from '@/json-schemas/usersPostsOneToManySchema';

describe('identifySchema', () => {
  it('should correctly identify the full structure for usersPostOneToOneSchema', () => {
    const schemaInfo = identifySchema(usersPostOneToOneSchema);

    expect(schemaInfo).toStrictEqual([
      {
        table: 'user',
        tableCases: {
          plural: 'users',
          titleCase: 'User',
          sentenceCase: 'User',
          phraseCase: 'user',
          pascalCase: 'User',
          camelCase: 'user',
          kebabCase: 'user',
          snakeCase: 'user',
          titleCasePlural: 'Users',
          sentenceCasePlural: 'Users',
          phraseCasePlural: 'users',
          pascalCasePlural: 'Users',
          camelCasePlural: 'users',
          kebabCasePlural: 'users',
          snakeCasePlural: 'users',
        },
        tablePlural: 'users',
        requiredColumns: [
          'user_id',
          'first_name',
          'last_name',
          'email',
          'username',
          'password',
          'created_at',
          'updated_at',
        ],
        columnsInfo: [
          {
            column_name: 'user_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'first_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'last_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'email',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: null,
          },
          {
            column_name: 'username',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: null,
          },
          {
            column_name: 'password',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'created_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'updated_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: [],
        foreignKeys: [],
        isPivot: false,
        childTables: ['post'],
        hasOne: ['post'],
        hasMany: [],
        belongsTo: [],
        belongsToMany: [],
        pivotRelationships: [],
      },
      {
        table: 'post',
        tableCases: {
          plural: 'posts',
          titleCase: 'Post',
          sentenceCase: 'Post',
          phraseCase: 'post',
          pascalCase: 'Post',
          camelCase: 'post',
          kebabCase: 'post',
          snakeCase: 'post',
          titleCasePlural: 'Posts',
          sentenceCasePlural: 'Posts',
          phraseCasePlural: 'posts',
          pascalCasePlural: 'Posts',
          camelCasePlural: 'posts',
          kebabCasePlural: 'posts',
          snakeCasePlural: 'posts',
        },
        tablePlural: 'posts',
        requiredColumns: [
          'post_id',
          'user_id',
          'title',
          'created_at',
          'updated_at',
        ],
        columnsInfo: [
          {
            column_name: 'post_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'user_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: {
              foreign_table_name: 'user',
              foreign_column_name: 'user_id',
            },
          },
          {
            column_name: 'title',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'content',
            data_type: 'string',
            is_nullable: 'YES',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'created_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'updated_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: ['user'],
        foreignKeys: ['user_id'],
        isPivot: false,
        childTables: [],
        hasOne: [],
        hasMany: [],
        belongsTo: ['user'],
        belongsToMany: [],
        pivotRelationships: [],
      },
    ]);
  });

  it('should correctly identify the full structure for usersPostsOneToManySchema', () => {
    const schemaInfo = identifySchema(usersPostsOneToManySchema);

    expect(schemaInfo).toStrictEqual([
      {
        table: 'user',
        tableCases: {
          plural: 'users',
          titleCase: 'User',
          sentenceCase: 'User',
          phraseCase: 'user',
          pascalCase: 'User',
          camelCase: 'user',
          kebabCase: 'user',
          snakeCase: 'user',
          titleCasePlural: 'Users',
          sentenceCasePlural: 'Users',
          phraseCasePlural: 'users',
          pascalCasePlural: 'Users',
          camelCasePlural: 'users',
          kebabCasePlural: 'users',
          snakeCasePlural: 'users',
        },
        tablePlural: 'users',
        requiredColumns: [
          'user_id',
          'first_name',
          'last_name',
          'email',
          'username',
          'password',
          'created_at',
          'updated_at',
        ],
        columnsInfo: [
          {
            column_name: 'user_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'first_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'last_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'email',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: null,
          },
          {
            column_name: 'username',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: null,
          },
          {
            column_name: 'password',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'created_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'updated_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: [],
        foreignKeys: [],
        isPivot: false,
        childTables: ['post'],
        hasOne: [],
        hasMany: ['post'],
        belongsTo: [],
        belongsToMany: [],
        pivotRelationships: [],
      },
      {
        table: 'post',
        tableCases: {
          plural: 'posts',
          titleCase: 'Post',
          sentenceCase: 'Post',
          phraseCase: 'post',
          pascalCase: 'Post',
          camelCase: 'post',
          kebabCase: 'post',
          snakeCase: 'post',
          titleCasePlural: 'Posts',
          sentenceCasePlural: 'Posts',
          phraseCasePlural: 'posts',
          pascalCasePlural: 'Posts',
          camelCasePlural: 'posts',
          kebabCasePlural: 'posts',
          snakeCasePlural: 'posts',
        },
        tablePlural: 'posts',
        requiredColumns: [
          'post_id',
          'user_id',
          'title',
          'created_at',
          'updated_at',
        ],
        columnsInfo: [
          {
            column_name: 'post_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'user_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: {
              foreign_table_name: 'user',
              foreign_column_name: 'user_id',
            },
          },
          {
            column_name: 'title',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'content',
            data_type: 'string',
            is_nullable: 'YES',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'created_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'updated_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: ['user'],
        foreignKeys: ['user_id'],
        isPivot: false,
        childTables: [],
        hasOne: [],
        hasMany: [],
        belongsTo: ['user'],
        belongsToMany: [],
        pivotRelationships: [],
      },
    ]);
  });

  it('should correctly identify the full structure for POSSchema', () => {
    const schemaInfo = identifySchema(POSSchema);

    expect(schemaInfo).toStrictEqual([
      {
        table: 'product',
        tableCases: {
          plural: 'products',
          titleCase: 'Product',
          sentenceCase: 'Product',
          phraseCase: 'product',
          pascalCase: 'Product',
          camelCase: 'product',
          kebabCase: 'product',
          snakeCase: 'product',
          titleCasePlural: 'Products',
          sentenceCasePlural: 'Products',
          phraseCasePlural: 'products',
          pascalCasePlural: 'Products',
          camelCasePlural: 'products',
          kebabCasePlural: 'products',
          snakeCasePlural: 'products',
        },
        tablePlural: 'products',
        requiredColumns: ['product_id', 'product_name'],
        columnsInfo: [
          {
            column_name: 'product_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'product_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: [],
        foreignKeys: [],
        isPivot: false,
        childTables: ['order_product'],
        hasOne: [],
        hasMany: ['order_product'],
        belongsTo: [],
        belongsToMany: ['order'],
        pivotRelationships: [
          {
            relatedTable: 'order',
            pivotTable: 'order_product',
          },
        ],
      },
      {
        table: 'customer',
        tableCases: {
          plural: 'customers',
          titleCase: 'Customer',
          sentenceCase: 'Customer',
          phraseCase: 'customer',
          pascalCase: 'Customer',
          camelCase: 'customer',
          kebabCase: 'customer',
          snakeCase: 'customer',
          titleCasePlural: 'Customers',
          sentenceCasePlural: 'Customers',
          phraseCasePlural: 'customers',
          pascalCasePlural: 'Customers',
          camelCasePlural: 'customers',
          kebabCasePlural: 'customers',
          snakeCasePlural: 'customers',
        },
        tablePlural: 'customers',
        requiredColumns: ['customer_id', 'name'],
        columnsInfo: [
          {
            column_name: 'customer_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: [],
        foreignKeys: [],
        isPivot: false,
        childTables: ['order'],
        hasOne: [],
        hasMany: ['order'],
        belongsTo: [],
        belongsToMany: [],
        pivotRelationships: [],
      },
      {
        table: 'order',
        tableCases: {
          plural: 'orders',
          titleCase: 'Order',
          sentenceCase: 'Order',
          phraseCase: 'order',
          pascalCase: 'Order',
          camelCase: 'order',
          kebabCase: 'order',
          snakeCase: 'order',
          titleCasePlural: 'Orders',
          sentenceCasePlural: 'Orders',
          phraseCasePlural: 'orders',
          pascalCasePlural: 'Orders',
          camelCasePlural: 'orders',
          kebabCasePlural: 'orders',
          snakeCasePlural: 'orders',
        },
        tablePlural: 'orders',
        requiredColumns: ['order_id', 'customer_id'],
        columnsInfo: [
          {
            column_name: 'order_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'customer_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: {
              foreign_table_name: 'customer',
              foreign_column_name: 'customer_id',
            },
          },
        ],
        foreignTables: ['customer'],
        foreignKeys: ['customer_id'],
        isPivot: false,
        childTables: ['order_product'],
        hasOne: [],
        hasMany: ['order_product'],
        belongsTo: ['customer'],
        belongsToMany: ['product'],
        pivotRelationships: [
          {
            relatedTable: 'product',
            pivotTable: 'order_product',
          },
        ],
      },
      {
        table: 'order_product',
        tableCases: {
          plural: 'order_products',
          titleCase: 'Order Product',
          sentenceCase: 'Order product',
          phraseCase: 'order product',
          pascalCase: 'OrderProduct',
          camelCase: 'orderProduct',
          kebabCase: 'order-product',
          snakeCase: 'order_product',
          titleCasePlural: 'Order Products',
          sentenceCasePlural: 'Order products',
          phraseCasePlural: 'order products',
          pascalCasePlural: 'OrderProducts',
          camelCasePlural: 'orderProducts',
          kebabCasePlural: 'order-products',
          snakeCasePlural: 'order_products',
        },
        tablePlural: 'order_products',
        requiredColumns: ['order_product_id', 'order_id', 'product_id'],
        columnsInfo: [
          {
            column_name: 'order_product_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'order_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: {
              foreign_table_name: 'order',
              foreign_column_name: 'order_id',
            },
          },
          {
            column_name: 'product_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: {
              foreign_table_name: 'product',
              foreign_column_name: 'product_id',
            },
          },
        ],
        foreignTables: ['order', 'product'],
        foreignKeys: ['order_id', 'product_id'],
        isPivot: true,
        childTables: [],
        hasOne: [],
        hasMany: [],
        belongsTo: ['order', 'product'],
        belongsToMany: [],
        pivotRelationships: [],
      },
    ]);
  });
});
