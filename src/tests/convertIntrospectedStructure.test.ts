import { describe, it, expect } from 'vitest';
import convertIntrospectedStructure from '@/utils/convertIntrospectedStructure';
import { ITable } from '@/interfaces/interfaces';

describe('convertIntrospectedStructure', () => {
  const usersPostOneToOneSchema: ITable[] = [
    {
      table_name: 'post',
      columns: [
        {
          column_name: 'post_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: "nextval('post_post_id_seq'::regclass)",
          primary_key: true,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'user_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: true,
          foreign_key: {
            foreign_table_name: 'user',
            foreign_column_name: 'user_id',
          },
        },
        {
          column_name: 'title',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'content',
          data_type: 'text',
          is_nullable: 'YES',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'created_at',
          data_type: 'timestamp with time zone',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'updated_at',
          data_type: 'timestamp with time zone',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
      ],
      check_constraints: [
        'post_id IS NOT NULL',
        'user_id IS NOT NULL',
        'title IS NOT NULL',
        'created_at IS NOT NULL',
        'updated_at IS NOT NULL',
      ],
    },
    {
      table_name: 'user',
      columns: [
        {
          column_name: 'user_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: "nextval('user_user_id_seq'::regclass)",
          primary_key: true,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'first_name',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'last_name',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'email',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: true,
          foreign_key: null,
        },
        {
          column_name: 'username',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: true,
          foreign_key: null,
        },
        {
          column_name: 'password',
          data_type: 'character',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'created_at',
          data_type: 'timestamp with time zone',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'updated_at',
          data_type: 'timestamp with time zone',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
      ],
      check_constraints: [
        'user_id IS NOT NULL',
        'first_name IS NOT NULL',
        'last_name IS NOT NULL',
        'email IS NOT NULL',
        'username IS NOT NULL',
        'password IS NOT NULL',
        'created_at IS NOT NULL',
        'updated_at IS NOT NULL',
      ],
    },
  ];

  const usersPostsOneToManySchema: ITable[] = [
    {
      table_name: 'post',
      columns: [
        {
          column_name: 'post_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: "nextval('post_post_id_seq'::regclass)",
          primary_key: true,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'user_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: {
            foreign_table_name: 'user',
            foreign_column_name: 'user_id',
          },
        },
        {
          column_name: 'title',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'content',
          data_type: 'text',
          is_nullable: 'YES',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'created_at',
          data_type: 'timestamp with time zone',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'updated_at',
          data_type: 'timestamp with time zone',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
      ],
      check_constraints: [
        'post_id IS NOT NULL',
        'user_id IS NOT NULL',
        'title IS NOT NULL',
        'created_at IS NOT NULL',
        'updated_at IS NOT NULL',
      ],
    },
    {
      table_name: 'user',
      columns: [
        {
          column_name: 'user_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: "nextval('user_user_id_seq'::regclass)",
          primary_key: true,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'first_name',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'last_name',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'email',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: true,
          foreign_key: null,
        },
        {
          column_name: 'username',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: true,
          foreign_key: null,
        },
        {
          column_name: 'password',
          data_type: 'character',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'created_at',
          data_type: 'timestamp with time zone',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'updated_at',
          data_type: 'timestamp with time zone',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
      ],
      check_constraints: [
        'user_id IS NOT NULL',
        'first_name IS NOT NULL',
        'last_name IS NOT NULL',
        'email IS NOT NULL',
        'username IS NOT NULL',
        'password IS NOT NULL',
        'created_at IS NOT NULL',
        'updated_at IS NOT NULL',
      ],
    },
  ];

  const POSSchema: ITable[] = [
    {
      table_name: 'customer',
      columns: [
        {
          column_name: 'customer_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: "nextval('customer_customer_id_seq'::regclass)",
          primary_key: true,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'name',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
      ],
      check_constraints: ['customer_id IS NOT NULL', 'name IS NOT NULL'],
    },
    {
      table_name: 'order',
      columns: [
        {
          column_name: 'order_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: "nextval('order_order_id_seq'::regclass)",
          primary_key: true,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'customer_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: {
            foreign_table_name: 'customer',
            foreign_column_name: 'customer_id',
          },
        },
      ],
      check_constraints: ['order_id IS NOT NULL', 'customer_id IS NOT NULL'],
    },
    {
      table_name: 'order_product',
      columns: [
        {
          column_name: 'order_product_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default:
            "nextval('order_product_order_product_id_seq'::regclass)",
          primary_key: true,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'order_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: {
            foreign_table_name: 'order',
            foreign_column_name: 'order_id',
          },
        },
        {
          column_name: 'product_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: {
            foreign_table_name: 'product',
            foreign_column_name: 'product_id',
          },
        },
      ],
      check_constraints: [
        'order_product_id IS NOT NULL',
        'order_id IS NOT NULL',
        'product_id IS NOT NULL',
      ],
    },
    {
      table_name: 'product',
      columns: [
        {
          column_name: 'product_id',
          data_type: 'bigint',
          is_nullable: 'NO',
          column_default: "nextval('product_product_id_seq'::regclass)",
          primary_key: true,
          unique: false,
          foreign_key: null,
        },
        {
          column_name: 'product_name',
          data_type: 'text',
          is_nullable: 'NO',
          column_default: null,
          primary_key: false,
          unique: false,
          foreign_key: null,
        },
      ],
      check_constraints: ['product_id IS NOT NULL', 'product_name IS NOT NULL'],
    },
  ];

  it('should correctly convert and identify the full structure for usersPostOneToOneSchema (PostgreSQL)', () => {
    const schemaInfo = convertIntrospectedStructure(
      usersPostOneToOneSchema,
      'postgresql',
    );

    expect(schemaInfo).toStrictEqual([
      {
        table: 'user',
        tablePlural: 'users',
        requiredColumns: [
          'user_id',
          'first_name',
          'last_name',
          'email',
          'username',
          'password',
          'created_at',
          'updated_at',
        ],
        columnsInfo: [
          {
            column_name: 'user_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'first_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'last_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'email',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: null,
          },
          {
            column_name: 'username',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: null,
          },
          {
            column_name: 'password',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'created_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'updated_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: [],
        foreignKeys: [],
        isPivot: false,
        childTables: ['post'],
        hasOne: ['post'],
        hasMany: [],
        belongsTo: [],
        belongsToMany: [],
        pivotRelationships: [],
      },
      {
        table: 'post',
        tablePlural: 'posts',
        requiredColumns: [
          'post_id',
          'user_id',
          'title',
          'created_at',
          'updated_at',
        ],
        columnsInfo: [
          {
            column_name: 'post_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'user_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: {
              foreign_table_name: 'user',
              foreign_column_name: 'user_id',
            },
          },
          {
            column_name: 'title',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'content',
            data_type: 'string',
            is_nullable: 'YES',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'created_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'updated_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: ['user'],
        foreignKeys: ['user_id'],
        isPivot: false,
        childTables: [],
        hasOne: [],
        hasMany: [],
        belongsTo: ['user'],
        belongsToMany: [],
        pivotRelationships: [],
      },
    ]);
  });

  it('should correctly convert and identify the full structure for usersPostsOneToManySchema (PostgreSQL)', () => {
    const schemaInfo = convertIntrospectedStructure(
      usersPostsOneToManySchema,
      'postgresql',
    );

    expect(schemaInfo).toStrictEqual([
      {
        table: 'user',
        tablePlural: 'users',
        requiredColumns: [
          'user_id',
          'first_name',
          'last_name',
          'email',
          'username',
          'password',
          'created_at',
          'updated_at',
        ],
        columnsInfo: [
          {
            column_name: 'user_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'first_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'last_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'email',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: null,
          },
          {
            column_name: 'username',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: true,
            foreign_key: null,
          },
          {
            column_name: 'password',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'created_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'updated_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: [],
        foreignKeys: [],
        isPivot: false,
        childTables: ['post'],
        hasOne: [],
        hasMany: ['post'],
        belongsTo: [],
        belongsToMany: [],
        pivotRelationships: [],
      },
      {
        table: 'post',
        tablePlural: 'posts',
        requiredColumns: [
          'post_id',
          'user_id',
          'title',
          'created_at',
          'updated_at',
        ],
        columnsInfo: [
          {
            column_name: 'post_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'user_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: {
              foreign_table_name: 'user',
              foreign_column_name: 'user_id',
            },
          },
          {
            column_name: 'title',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'content',
            data_type: 'string',
            is_nullable: 'YES',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'created_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'updated_at',
            data_type: 'Date',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: ['user'],
        foreignKeys: ['user_id'],
        isPivot: false,
        childTables: [],
        hasOne: [],
        hasMany: [],
        belongsTo: ['user'],
        belongsToMany: [],
        pivotRelationships: [],
      },
    ]);
  });

  it('should correctly convert and identify the full structure for POSSchema (PostgreSQL)', () => {
    const schemaInfo = convertIntrospectedStructure(POSSchema, 'postgresql');

    expect(schemaInfo).toStrictEqual([
      {
        table: 'product',
        tablePlural: 'products',
        requiredColumns: ['product_id', 'product_name'],
        columnsInfo: [
          {
            column_name: 'product_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'product_name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: [],
        foreignKeys: [],
        isPivot: false,
        childTables: ['order_product'],
        hasOne: [],
        hasMany: ['order_product'],
        belongsTo: [],
        belongsToMany: ['order'],
        pivotRelationships: [
          {
            relatedTable: 'order',
            pivotTable: 'order_product',
          },
        ],
      },
      {
        table: 'customer',
        tablePlural: 'customers',
        requiredColumns: ['customer_id', 'name'],
        columnsInfo: [
          {
            column_name: 'customer_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'name',
            data_type: 'string',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: null,
          },
        ],
        foreignTables: [],
        foreignKeys: [],
        isPivot: false,
        childTables: ['order'],
        hasOne: [],
        hasMany: ['order'],
        belongsTo: [],
        belongsToMany: [],
        pivotRelationships: [],
      },
      {
        table: 'order',
        tablePlural: 'orders',
        requiredColumns: ['order_id', 'customer_id'],
        columnsInfo: [
          {
            column_name: 'order_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'customer_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: {
              foreign_table_name: 'customer',
              foreign_column_name: 'customer_id',
            },
          },
        ],
        foreignTables: ['customer'],
        foreignKeys: ['customer_id'],
        isPivot: false,
        childTables: ['order_product'],
        hasOne: [],
        hasMany: ['order_product'],
        belongsTo: ['customer'],
        belongsToMany: ['product'],
        pivotRelationships: [
          {
            relatedTable: 'product',
            pivotTable: 'order_product',
          },
        ],
      },
      {
        table: 'order_product',
        tablePlural: 'order_products',
        requiredColumns: ['order_product_id', 'order_id', 'product_id'],
        columnsInfo: [
          {
            column_name: 'order_product_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: 'AUTO_INCREMENT',
            primary_key: true,
            unique: false,
            foreign_key: null,
          },
          {
            column_name: 'order_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: {
              foreign_table_name: 'order',
              foreign_column_name: 'order_id',
            },
          },
          {
            column_name: 'product_id',
            data_type: 'number',
            is_nullable: 'NO',
            column_default: null,
            primary_key: false,
            unique: false,
            foreign_key: {
              foreign_table_name: 'product',
              foreign_column_name: 'product_id',
            },
          },
        ],
        foreignTables: ['order', 'product'],
        foreignKeys: ['order_id', 'product_id'],
        isPivot: true,
        childTables: [],
        hasOne: [],
        hasMany: [],
        belongsTo: ['order', 'product'],
        belongsToMany: [],
        pivotRelationships: [],
      },
    ]);
  });
});
